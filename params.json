{"name":"Opener","tagline":"OpENer is an EtherNet/IP stack for I/O adapter devices. It supports multiple I/O and explicit connections and includes objects and services for making EtherNet/IP-compliant products as defined in the ODVA specification.","body":"====================\r\nOpENer Version 1.2.0\r\n====================\r\n\r\nWelcome to OpENer!\r\n\r\nOpENer is an EtherNet/IP(TM) stack for I/O adapter devices; supports multiple \r\nI/O and explicit connections; includes objects and services to make EtherNet/IP-\r\ncompliant products defined in THE ETHERNET/IP SPECIFICATION and published by \r\nODVA (www.odva.org).\r\n\r\nRequirements:\r\n=============\r\nOpENer has been developed to be highly portable. The default version targets PCs\r\nwith a POSIX operating system and a BSD-socket network interface. To test this \r\nversion we recommend a Linux PC or Windows with Cygwin (www.cygwin.com) \r\ninstalled. You will need to have the following installed:\r\n\r\n gcc, make, binutils, etc. \r\n \r\nfor normal building. These should be installed on most Linux installations and\r\nare part of the development packages of cygwin.\r\n\r\nFor the development itself we recommend the use of Eclipse with the CTD plugin \r\n(www.eclipse.org).\r\n\r\nCompile for PCs:\r\n================\r\n  1. Directly in the shell:\r\n     1.1 Go into the bin/pc directory\r\n     1.2 Invoke make\r\n     1.3 For invoking opener type:\r\n          ./opener ipaddress subnetmask gateway domainname hostaddress macaddress\r\n         e.g. ./opener 192.168.0.2 255.255.255.0 192.168.0.1 test.com testdevice 00 15 C5 BF D0 87 \r\n  2. Within Eclipse \r\n     2.1 Import the project\r\n     2.2 Go to the bin/pc folder in the make targets view\r\n     2.3 Choose all from the make targets\r\n     2.4 The resulting executable will be in the directory\r\n        ./bin/pc\r\n\r\nDirectory structure:\r\n====================\r\n  - bin ...  The resulting binaries and make files for different ports (currently only pc)\r\n  - doc ...  Doxygen generated documentation (has to be generated for the SVN version) and Coding rules\r\n  - data ... EDS file for the default application\r\n  - src\r\n     - cip ... the CIP layer of the stack\r\n     - enet_encap ... the Ethernet encapsulation layer\r\n     - ports ... the platform specific code\r\n\r\nDocumentation:\r\n==============\r\nThe documentation of the functions of OpENer is part of the source code. The source \r\npackages contain the generated documentation in the directory doc/api_doc. If you \r\nuse the SVN version you will need the program Doxygen for generating the HTML \r\ndocumentation. You can generate the documentation by invoking doxygen from the \r\ncommand line in the opener main directory.\r\n\r\nPorting OpENer:\r\n===============\r\nFor porting OpENer to new platforms please see the porting section in the \r\nDoxygen documentation.  \r\n\r\n\r\n\r\n","google":"UA-43528486-1","note":"Don't delete this file! It's used internally to help with page regeneration."}